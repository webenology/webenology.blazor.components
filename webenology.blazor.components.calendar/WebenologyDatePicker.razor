@using webenology.blazor.components.OutsideClickComponent

@namespace webenology.blazor.components.calendar

<span @ref="_el">
    <OutsideClick OnLoseFocus="HideCalendar" class="@($"{_wrapperCss} {BaseCssClass}")">
        <div class="wc-input" @onclick="ToggleCalendar">
            <input class="@InputCss" type="text" @bind="TextValue" @bind:after="()=> DateParser()" disbabled="@IsDisabled" @ref="_textInput" @onfocus="SelectAll"/>
        </div>
        @if (SpecialCaseHelper.SpecialValueMatch.IsMatch(_textValue ?? ""))
        {
            <span>@GetDateRangeForInput(true)</span>
        }

        <div class="wc-holder @(_isCalendarVisible ? "wc-visible" : "") @(IsSmall ? "wc-small" : "wc-large") @(_isRangeCalendar ? "wc-range": "wc-single") @(IsInline ? "wc-inline": "")">
            <div class="wc-header">
                <div @onclick="@(() => AddYear(-1))">
                    @GetYear(-1)
                </div>
                <div @onclick="@(GoToLastMonthSelected)">
                    @GetDateRangeData()
                </div>
                <div @onclick="@(()=> AddYear(1))">
                    @GetYear(1)
                </div>
            </div>
            <div class="wc-left" @onclick="@(()=> UpdateMiddleMonth(-1))">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5"
                     stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <polyline points="15 6 9 12 15 18" />
                </svg>
            </div>
            @if (_isRangeCalendar)
            {
                <div class="wc-quick-selects">
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.Today))">Today</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.Yesterday))">Yesterday</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.LastSevenDays))">Last 7 Days</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.LastWeek))">Last Week</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.LastThreeWeeks))">Last 3 Weeks</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.MonthToDate))">MTD</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.YearToDate))">YTD</div>
                    <div @onclick="@(()=> OnQuickSelect(QuickSelect.Year))">Year</div>
                </div>
            }
            @for (var i = StartingInt; i <= EndingInt; i++)
            {
                var ii = i;
                <div class="wc">
                    <div class="wc-month" @onclick="@(()=> OnSelectMonth(ii))">@GetMonthName(i)</div>
                    <div class="wc-days">
                        <div class="wc-week-day">S</div>
                        <div class="wc-week-day">M</div>
                        <div class="wc-week-day">T</div>
                        <div class="wc-week-day">W</div>
                        <div class="wc-week-day">T</div>
                        <div class="wc-week-day">F</div>
                        <div class="wc-week-day">S</div>
                        @for (var j = 1; j <= GetDaysInMonth(i); j++)
                        {
                            var jj = j;
                            var css = BuildCss(ii, jj);
                            <div class="wc-day @css" @onmouseover="@(()=> SetLastDate(ii,jj))" @onclick="@(()=> OnClickDate(ii, jj))">@j</div>
                        }
                    </div>
                    @if (ShowTime && (!IsSmall || (IsSmall && !_isRangeCalendar)) && (i == 0 || i == EndingInt))
                    {
                        var time = i == 0 ? _fromTime : _toTime ?? new WebenologyTime();
                        if ((i > 0 && _isRangeCalendar) || i == 0)
                        {
                            <div class="wc-time">
                                <select class="wc-hour" @bind="@time.Hour">
                                    @for (var j = 1; j < 13; j++)
                                    {
                                        <option value="@j">@j.ToString("00")</option>
                                    }
                                </select>
                                <span class="wc-seperator">:</span>
                                <select class="wc-minute" @bind="@time.Minute">
                                    @for (var j = 0; j < 60; j++)
                                    {
                                        <option value="@j">@j.ToString("00")</option>
                                    }
                                </select>
                                <select class="wc-meridian" @bind="@time.Meridian">
                                    <option value="AM">AM</option>
                                    <option value="PM">PM</option>
                                </select>
                            </div>
                        }
                    }
                    @if (ShowTime && IsSmall && _isRangeCalendar)
                    {
                        var time = _fromTime;
                        var time2 = _toTime ?? new WebenologyTime();
                        <div class="wc-time">
                            <select class="wc-hour" @bind="@time.Hour">
                                @for (var j = 1; j < 13; j++)
                                {
                                    <option value="@j">@j.ToString("00")</option>
                                }
                            </select>
                            <span class="wc-seperator">:</span>
                            <select class="wc-minute" @bind="@time.Minute">
                                @for (var j = 0; j < 60; j++)
                                {
                                    <option value="@j">@j.ToString("00")</option>
                                }
                            </select>
                            <select class="wc-meridian" @bind="@time.Meridian">
                                <option value="AM">AM</option>
                                <option value="PM">PM</option>
                            </select>
                        </div>
                        <div class="wc-time">
                            <select class="wc-hour" @bind="@time2.Hour">
                                @for (var j = 1; j < 13; j++)
                                {
                                    <option value="@j">@j.ToString("00")</option>
                                }
                            </select>
                            <span class="wc-seperator">:</span>
                            <select class="wc-minute" @bind="@time2.Minute">
                                @for (var j = 0; j < 60; j++)
                                {
                                    <option value="@j">@j.ToString("00")</option>
                                }
                            </select>
                            <select class="wc-meridian" @bind="@time2.Meridian">
                                <option value="AM">AM</option>
                                <option value="PM">PM</option>
                            </select>
                        </div>
                    }
                </div>
            }

            <div class="wc-right" @onclick="@(()=> UpdateMiddleMonth(1))">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5"
                     stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <polyline points="9 6 15 12 9 18" />
                </svg>
            </div>
            
            @if (!IsInline)
            {
                <div class="wc-footer">
                    <button class="wc-clear" type="button" @onclick="Clear">Clear</button>
                    <button class="wc-cancel" type="button" @onclick="Reset">Cancel</button>
                    <button type="button" @onclick="SelectDateRange">Ok</button>
                </div>
            }
        </div>
    </OutsideClick>
</span>
